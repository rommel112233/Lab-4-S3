import java.io.FileWriter;
import java.io.IOException;
import java.util.*;

public class GeneradorPacientes {
    private static final String[] nombres = {"Ana", "Luis", "María", "Carlos", "Elena", "Pedro", "Lucía", "Jorge"};
    private static final String[] apellidos = {"Gómez", "Pérez", "Muñoz", "Soto", "Torres", "Navarro", "Ruiz", "Vega"};
    private static final String[] areas = {"SAPU", "urgencia_adulto", "urgencia_infantil"};

    private static int generarCategoriaAleatoria(Random rand) {
        int r = rand.nextInt(100) + 1;
        if (r <= 10) return 1;
        else if (r <= 25) return 2;
        else if (r <= 43) return 3;
        else if (r <= 70) return 4;
        else return 5;
    }

    public static List<Paciente> generarPacientes(int cantidad, long timestampInicio) {
        List<Paciente> pacientes = new ArrayList<>();
        Random rand = new Random();

        for (int i = 0; i < cantidad; i++) {
            String nombre = nombres[rand.nextInt(nombres.length)];
            String apellido = apellidos[rand.nextInt(apellidos.length)];
            String ID = "P" + (i + 1);
            int categoria = generarCategoriaAleatoria(rand);
            long tiempoLlegada = timestampInicio + (i * 600);
            String area = areas[rand.nextInt(areas.length)];
            Paciente p = new Paciente(nombre, apellido, ID, categoria, tiempoLlegada, area);
            pacientes.add(p);
        }

        return pacientes;
    }

    public static void guardarEnArchivo(List<Paciente> pacientes, String nombreArchivo) {
        try (FileWriter writer = new FileWriter(nombreArchivo)) {
            for (Paciente p : pacientes) {
                writer.write(p.getNombre() + "," + p.getApellido() + "," + p.getId() + "," +
                             p.getCategoria() + "," + p.getTiempollegada() + "," + p.getArea() + "\n");
            }
        } catch (IOException e) {
            System.out.println("Error al escribir archivo: " + e.getMessage());
        }
    }
}
